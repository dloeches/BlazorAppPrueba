@page "/crear-tarea"

@using BlazorAppPruebaServicios.TareaServicio
@using BlazorAppPruebaModelos.Entities

@rendermode InteractiveServer

@if (mensajeError != null)
{
    <p class="text-danger">@mensajeError</p>
}

<form>
    <div class="form-group">
        <label for="nombre">Nombre de la Tarea:</label>
        <input type="text" id="nombre" @bind="Nombre" class="form-control" />

        <label for="estado">Estado Inicial:</label>
        <select id="estado" @bind="Estado" class="form-control">
            @foreach (var estado in Enum.GetValues(typeof(EstadoTarea)))
            {
                <option value="@estado">@estado</option>
            }
        </select>

        <button class="btn btn-primary mt-2" @onclick="CreaTarea">Crear Tarea</button>
    </div>
</form>

@code {

    [Parameter]
    public EventCallback<Tarea> OnTareaCreada { get; set; }
    private string? Nombre { get; set; }
    private EstadoTarea Estado { get; set; } = EstadoTarea.Pendiente;
    string? mensajeError;

    private async Task CreaTarea()
    {
        try
        {
            var nuevaTarea = new Tarea
                {
                    Id = new Random().Next(100000, 200000), // Generar un ID aleatorio
                    Nombre = Nombre,
                    Estado = Estado
                };
           ;
            OnTareaCreada.InvokeAsync(nuevaTarea);

            // Limpiar el formulario después de crear la tarea
            Nombre = string.Empty;
            Estado = EstadoTarea.Pendiente;
        }
        catch (Exception ex)
        {
            mensajeError = $"Error al crear la tarea: {ex.Message}";
        }
    }
}